% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions__PredictionRR.R
\name{rfuncertainty}
\alias{rfuncertainty}
\alias{calc_pfirst}
\alias{calc_excessp}
\title{Uncertainty metrics}
\usage{
calc_pfirst(x)

calc_excessp(x)
}
\arguments{
\item{x}{A two-dimension numeric object. Rows represent cases.}
}
\value{
A numeric vector of length equal to the number of rows of \code{x}.
}
\description{
Uncertainty metrics
}
\section{Details}{

\code{calc_pfirst()} returns the maximum value per row of \code{x}.
For \code{x} representing class probabilities predicted by a random forest,
then \code{calc_pfirst()} represents, as measure of prediction certainty,
the probability of the most likely category. This metric varies between
\itemize{
\item 1, being completely certain
\item \verb{1 / (#categories)}, being completely uncertain.
}


\code{calc_excessp()} returns the difference between the largest and second
largest value per row of \code{x}.
For \code{x} representing class probabilities predicted by a random forest,
then \code{calc_excessp()} represents, as measure of prediction certainty,
how much the probability of the most likely category exceeds the second most
likely category. This metric varies between
\itemize{
\item 1, being completely certain
\item 0, being completely uncertain.
}
}

\examples{
ncats <- 4 # Number of categories
n <- 1e3 # Number of samples

p_fix <- 0.4 # Fix probability

# Simulate probabilities of remaining categories given `p_fix`
set.seed(1234)

# Draw `ncats - 1` random numbers so that they sum up to `1 - pfix`
ps <- replicate(
  n = n,
  expr = {
    tmp <- runif(n = ncats - 1)
    tmp / sum(tmp) * (1 - p_fix)
  }
)
x <- cbind(rep(p_fix, n), t(ps))

pfirst <- calc_pfirst(x)
excessp <- calc_excessp(x)

if (interactive() && requireNamespace("graphics")) {
  plot(
    excessp,
    pfirst,
    main = paste("Fixed p =", p_fix),
    xlim = c(0, 1),
    ylim = c(0, 1)
  )
  graphics::abline(0, 1, col= "red")
  graphics::abline(h = p_fix, lty = 2)
  graphics::abline(v = p_fix, lty = 2)
}

ps <- rbind(
  c(0, 1, 0, 0),
  c(0.5, 0, 0, 0.5),
  c(0.4, 0, 0.1, 0.4),
  c(0.5, 0.4, 0.1, 0),
  c(0.25, 0.25, 0.25, 0.25)
)
calc_excessp(ps) ## expect (c(1, 0, 0, 0.1, 0))

}
