% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions__ProjectDescription-newRR3.R
\name{convolve_levels}
\alias{convolve_levels}
\title{Convolution of two categorical variables}
\usage{
convolve_levels(to, from, clevels = NULL, sep = "_from_")
}
\arguments{
\item{to}{A vector with character strings representing categories (levels)
under target conditions.}

\item{from}{A vector with character strings representing categories (levels)
under reference conditions.}

\item{clevels}{A vector with character strings representing the full set of
convoluted categories (levels).}

\item{sep}{A character string used as separator between values of
\code{to} and \code{from}.}
}
\value{
A vector with character strings representing the convoluted categories,
if \code{clevels} is \code{NULL}.
If \code{clevels} is provided, then an integer vector representing the numerical
value of the convoluted categories relative to the set of \code{clevels}.
}
\description{
This can be used to represent deltas of two categorical variables \code{x - y}.
}
\examples{
n_cats <- 3L
cats <- letters[seq_len(n_cats)]
set.seed(456)
x <- sample(x = cats, size = 10L, replace = TRUE)
y <- sample(x = cats[-1L], size = 10L, replace = TRUE)
all_convoluted_cats <- {
  tmp <- expand.grid(cats, cats)
  paste(tmp[[1L]], tmp[[2L]], sep = "_from_")
}

cc1 <- newRR3::convolve_levels(to = x, from = y)
cc2 <- newRR3::convolve_levels(
  to = x,
  from = y,
  clevels = all_convoluted_cats
)

fcc1 <- factor(cc1, levels = all_convoluted_cats)
all.equal(as.integer(fcc1), cc2)

fcc2 <- factor(all_convoluted_cats[cc2], levels = all_convoluted_cats)
all.equal(fcc1, fcc2)

}
